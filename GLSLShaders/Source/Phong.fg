/*
    Marc-Antoine Desbiens
    October 2012
*/

varying vec3 tVertex;
varying vec3 tNorm;

void main(void)
{
	vec4 kAmb = gl_FrontMaterial.ambient;
	vec4 kDiff = gl_FrontMaterial.diffuse;
	vec4 kSpec = gl_FrontMaterial.specular;
	float shininess = gl_FrontMaterial.shininess;
	vec4 iAmb = gl_LightSource[0].ambient;
	vec4 iDiff = gl_LightSource[0].diffuse;
	vec4 iSpec = gl_LightSource[0].specular;

	//Get the cectors
	vec3 lightVec = normalize(vec3(gl_LightSource[0].position) - tVertex);  // L
	vec3 viewVec = normalize(-tVertex);                                     // V

	float NdotL = dot(lightVec,tNorm);
    
    //Back side only ambient
    vec4 color = kAmb*iAmb;

	//Front side: phong shading
	if ( NdotL > 0.0 ) 
	{
		vec3 reflexVec = normalize(2.0*NdotL*tNorm-lightVec);                  // R
		float RdotV = max(dot(viewVec,reflexVec),0.0);
        color = kAmb*iAmb + kDiff*NdotL*iDiff + kSpec*pow(RdotV,shininess)*iSpec; //Phong formula
	}
	
	gl_FragColor = color;
}
